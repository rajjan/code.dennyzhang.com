* Leetcode: Group Anagrams                                              :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     anagram, codetemplate, hashmap
:END:
---------------------------------------------------------------------
Given an array of strings, group anagrams together.
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/group-anagrams"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/find-duplicate-file-in-system][Leetcode: Find Duplicate File in System]]
- [[https://code.dennyzhang.com/group-shifted-strings][Leetcode: Group Shifted Strings]]
- Tag: [[https://code.dennyzhang.com/followup-anagram][#anagram]]
---------------------------------------------------------------------
Given an array of strings, group anagrams together.
#+BEGIN_EXAMPLE
For example, given: ["eat", "tea", "tan", "ate", "nat", "bat"], 
Return:

[
  ["ate", "eat","tea"],
  ["nat","tan"],
  ["bat"]
]
#+END_EXAMPLE

Note: All inputs will be in lower-case.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/group-anagrams][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/group-anagrams/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## https://code.dennyzhang.com/group-anagrams
## Basic Ideas: 
## map each item to a string, group them by a map, dump the map
## Complexity: Time O(n*k*log(k)), Space O(k*n). 
##   k is the length of longest item
class Solution(object):
    def groupAnagrams(self, strs):
        """
        :type strs: List[str]
        :rtype: List[List[str]]
        """
        m = {}
        for item in strs:
            sorted_item = ''.join(sorted(item))
            if m.has_key(sorted_item):
                m[sorted_item].append(item)
            else:
                m[sorted_item] = [item]

        res = []
        for key in m:
            res.append(m[key])
        return res
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
