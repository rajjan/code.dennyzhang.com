* Leetcode: Word Pattern II                                              :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     string
:END:
---------------------------------------------------------------------
Word Pattern II
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/word-pattern-ii"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/word-pattern][Word Pattern]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-string][#string]]
---------------------------------------------------------------------
Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty substring in str.

Examples:
1. pattern = "abab", str = "redblueredblue" should return true.
- pattern = "aaaa", str = "asdasdasdasd" should return true.
- pattern = "aabb", str = "xyzabcxzyabc" should return false.

Notes:
You may assume both pattern and str contains only lowercase letters.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/word-pattern-ii][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/word-pattern-ii/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC python
## https://code.dennyzhang.com/word-pattern-ii
## Basic Ideas:
##  In str, not all words are the same length
##
## Complexity:
class Solution(object):
    def wordPatternMatch(self, pattern, str):
        """
        :type pattern: str
        :type str: str
        :rtype: bool
        """
        len1, len2 = len(pattern), len(str)
        if len1 == 0 or len2 == 0: return len1 == len2
        # problematic?
        if len2%len1 != 0: return False
        word_len = len2/len1
        d, seen = {}, set([])
        for i in range(len1):
            ch = pattern[i]
            word = str[i*word_len:(i+1)*word_len]
            if ch in d:
                if d[ch] != word: return False
            else:
                if word in seen: return False
                d[ch] = word
                seen.add(word)
        return True
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
