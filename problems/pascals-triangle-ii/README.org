* Leetcode: Pascal's Triangle II                                              :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     triangle, redo
:END:
---------------------------------------------------------------------
Pascal's Triangle II
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/pascals-triangle-ii"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/pascals-triangle][Leetcode: Pascal's Triangle]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/tag/triangle][#triangle]]
---------------------------------------------------------------------
iven an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/pascals-triangle-ii][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/pascals-triangle-ii/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## https://code.dennyzhang.com/pascals-triangle-ii
class Solution(object):
    def getRow(self, rowIndex):
        """
        :type rowIndex: int
        :rtype: List[int]
        """
        if rowIndex == 0:
            return [1]
        l = [1] * (rowIndex + 1)
        for i in range(0, rowIndex+1):
            self.getNextRow(l, i)

        return l

    def getNextRow(self, num_list, currentRowCount):
        if currentRowCount == 0:
            num_list[0] = 1
            return

        if currentRowCount == 1:
            num_list[0] = 1
            num_list[1] = 1
            return

        # print("currentRowCount: %d" % (currentRowCount))
        for i in range(currentRowCount-1, 0, -1):
            num_list[i] = num_list[i] + num_list[i-1]
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
