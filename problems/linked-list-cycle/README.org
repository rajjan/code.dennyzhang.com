* Leetcode: Linked List Cycle                                    :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     linkedlist, inspiring, twopointer, floydcycle
:END:
---------------------------------------------------------------------
Linked List Cycle
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/linked-list-cycle"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-twopointer][#twopointer]], [[https://code.dennyzhang.com/review-linkedlist][#linkedlist]], [[https://code.dennyzhang.com/followup-floydcycle][#floydcycle]]
---------------------------------------------------------------------
Given a linked list, determine if it has a cycle in it.

Follow up:
Can you solve it without using extra space?

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/linked-list-cycle][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/linked-list-cycle/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC python
## https://code.dennyzhang.com/linked-list-cycle
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def hasCycle(self, head):
        """
        :type head: ListNode
        :rtype: bool
        """
        ## Idea: 2 pointers. Each time, p1 move 1 step, p2 move 2 step. 
        ##         If it has a cycle(not only it's a circle), p1 and p2 will meet. 
        ##         Otherwise p1 and p2 won't.
        ## Complexity: Time O(n), Space O(1)
        ##
        ##     n1    ->   n2    -> n3
        ##     p1
        ##                p2
        if head is None or head.next is None:
            return False
        p1 = head
        p2 = head.next
        while (p1 is not None) and (p2 is not None) and (p2 != p1):
            p1 = p1.next
            if (p2.next is None) or (p2.next is None):
                p2 = None
            else:
                p2 = p2.next.next
    
        return  (p1 is not None) and (p2 is not None) and (p2 == p1)
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
